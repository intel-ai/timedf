name: Reusable build action
on:
  workflow_call:
    inputs:
      name:
        type: string
        default: cpu
      options:
        type: string
        default:

    outputs:
      cache-suffix:
        value: ${{ jobs.build.outputs.cache-suffix }}

jobs:
  build:
    runs-on: ubuntu-latest

    outputs:
      cache-suffix: ${{ env.DATE }}

    steps:
      - uses: actions/checkout@v3

      - name: Free space
        run: |
          sudo rm -rf /usr/local/lib/android/sdk /opt/hostedtoolcache /usr/share/swift /opt/az
          sudo apt-get purge -y gcc

      - name: Set env context
        run: |
          echo RUN_STAMP=${{ runner.os }}-${{ inputs.name }} >>$GITHUB_ENV
          echo CONDA_ENV_PATH=$CONDA/envs/omnisci-dev >>$GITHUB_ENV
          echo "DATE=$(date +'%Y%m%d')" >> $GITHUB_ENV

      - name: Restore Conda env cache
        id: conda-cache
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.CONDA_ENV_PATH }}
          key: ${{ env.RUN_STAMP }}-conda-${{ hashFiles('omniscidb/scripts/mapd-deps-conda-dev-env.yml') }}-${{ env.DATE }}
          restore-keys: |
            ${{ env.RUN_STAMP }}-conda-${{ hashFiles('omniscidb/scripts/mapd-deps-conda-dev-env.yml') }}-

      - name: Update Conda env
        if: steps.conda-cache.cache-hit != 'true'
        run: |
          conda update conda
          conda env update -f omniscidb/scripts/mapd-deps-conda-dev-env.yml

      - name: Install cudatoolkit-dev
        if: inputs.name == 'cuda'
        run: |
          conda install -n omnisci-dev -c conda-forge cudatoolkit-dev arrow-cpp-proc=3.0.0=cuda

      - name: Restore Maven cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.m2
          key: ${{ env.RUN_STAMP }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ env.RUN_STAMP }}-maven-

      - name: Build
        run: |
          conda info
          conda list -n omnisci-dev
          conda run -n omnisci-dev cmake -B build -S . ${{ inputs.options }}
          conda run -n omnisci-dev cmake --build build --parallel 2
          tar -zcf /tmp/build.tgz .

      - name: Upload build and src files
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.RUN_STAMP }}-build
          path: /tmp/build.tgz

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.RUN_STAMP }}-logs
          path: |
            build/*.log
            build/CMakeCache.txt
            build/CMakeFiles/*.log

