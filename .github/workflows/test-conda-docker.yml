name: Reusable test action
on:
  workflow_call: 
    inputs:
      name:
        type: string
        default: cpu
      test:
        type: string
        required: true
      reset-cache:
        type: boolean
        default: false        

jobs:
  test:
    runs-on: [self-hosted, linux, intel-ai.omniscripts.modin-ray]

    steps:
      - uses: actions/checkout@v3

      - name: Set env context
        run: |
          echo CONDA_PATH=$CONDA >>$GITHUB_ENV
          echo RUN_STAMP=${{ runner.os }}-${{ inputs.name }} >>$GITHUB_ENV
          echo CONDA_ENV_PATH=$CONDA/envs/${{ env.CONDA_ENV }} >>$GITHUB_ENV

      - uses: actions/download-artifact@v3
        with:
          name: ${{ runner.os }}-${{ inputs.name }}-build

      - name: Build docker image for modin tests
        run: |
          docker rm -f ci.${{ inputs.name }} || true
          docker build -t ci/${{ inputs.name }} -f .github/workflows/modin/Dockerfile.ci ${{ inputs.reset-cache && '--no-cache' || '' }} .github/workflows/modin

      - name: Run modin microbenchmarks and upload results
        run:  |
          docker run -d --name ci.${{ inputs.name }} ci/${{ inputs.name }}
          docker cp build.tgz ci.${{ inputs.name }}:/_work
          docker exec ci.${{ inputs.name }} sh /modin/install-hdk.sh
          docker exec -u ghrunner ci.${{ inputs.name }} conda run -n modin sh /modin/asv-ray-runner.sh

      - name: Stop the container
        if: always()
        run: |
          docker stop ci.${{ inputs.name }} || true

